/* tslint:disable */
/* eslint-disable */
/**
 * Scrapybara API
 * Scrapybara API provides web automation, capybara-style. It allows users to generate, execute, and manage scripts.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { GenerateScriptNonStreamingResponse } from './GenerateScriptNonStreamingResponse';
import {
    instanceOfGenerateScriptNonStreamingResponse,
    GenerateScriptNonStreamingResponseFromJSON,
    GenerateScriptNonStreamingResponseFromJSONTyped,
    GenerateScriptNonStreamingResponseToJSON,
} from './GenerateScriptNonStreamingResponse';
import type { GenerateScriptStreamingResponse } from './GenerateScriptStreamingResponse';
import {
    instanceOfGenerateScriptStreamingResponse,
    GenerateScriptStreamingResponseFromJSON,
    GenerateScriptStreamingResponseFromJSONTyped,
    GenerateScriptStreamingResponseToJSON,
} from './GenerateScriptStreamingResponse';

/**
 * @type GenerateScriptResponse
 * 
 * @export
 */
export type GenerateScriptResponse = { streaming: 'false' } & GenerateScriptNonStreamingResponse | { streaming: 'true' } & GenerateScriptStreamingResponse;

export function GenerateScriptResponseFromJSON(json: any): GenerateScriptResponse {
    return GenerateScriptResponseFromJSONTyped(json, false);
}

export function GenerateScriptResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateScriptResponse {
    if (json == null) {
        return json;
    }
    switch (json['streaming']) {
        case 'false':
            return Object.assign({}, GenerateScriptNonStreamingResponseFromJSONTyped(json, true), { streaming: 'false' } as const);
        case 'true':
            return Object.assign({}, GenerateScriptStreamingResponseFromJSONTyped(json, true), { streaming: 'true' } as const);
        default:
            throw new Error(`No variant of GenerateScriptResponse exists with 'streaming=${json['streaming']}'`);
    }
}

export function GenerateScriptResponseToJSON(value?: GenerateScriptResponse | null): any {
    if (value == null) {
        return value;
    }
    switch (value['streaming']) {
        case 'false':
            return GenerateScriptNonStreamingResponseToJSON(value);
        case 'true':
            return GenerateScriptStreamingResponseToJSON(value);
        default:
            throw new Error(`No variant of GenerateScriptResponse exists with 'streaming=${value['streaming']}'`);
    }

}

