/* tslint:disable */
/* eslint-disable */
/**
 * Scrapybara API
 * Scrapybara API provides web automation, capybara-style. It allows users to generate, execute, and manage scripts.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ExecuteScriptNonStreamingResponse } from './ExecuteScriptNonStreamingResponse';
import {
    instanceOfExecuteScriptNonStreamingResponse,
    ExecuteScriptNonStreamingResponseFromJSON,
    ExecuteScriptNonStreamingResponseFromJSONTyped,
    ExecuteScriptNonStreamingResponseToJSON,
} from './ExecuteScriptNonStreamingResponse';
import type { ExecuteScriptStreamingResponse } from './ExecuteScriptStreamingResponse';
import {
    instanceOfExecuteScriptStreamingResponse,
    ExecuteScriptStreamingResponseFromJSON,
    ExecuteScriptStreamingResponseFromJSONTyped,
    ExecuteScriptStreamingResponseToJSON,
} from './ExecuteScriptStreamingResponse';

/**
 * @type ExecuteScriptResponse
 * 
 * @export
 */
export type ExecuteScriptResponse = { streaming: 'false' } & ExecuteScriptNonStreamingResponse | { streaming: 'true' } & ExecuteScriptStreamingResponse;

export function ExecuteScriptResponseFromJSON(json: any): ExecuteScriptResponse {
    return ExecuteScriptResponseFromJSONTyped(json, false);
}

export function ExecuteScriptResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExecuteScriptResponse {
    if (json == null) {
        return json;
    }
    switch (json['streaming']) {
        case 'false':
            return Object.assign({}, ExecuteScriptNonStreamingResponseFromJSONTyped(json, true), { streaming: 'false' } as const);
        case 'true':
            return Object.assign({}, ExecuteScriptStreamingResponseFromJSONTyped(json, true), { streaming: 'true' } as const);
        default:
            throw new Error(`No variant of ExecuteScriptResponse exists with 'streaming=${json['streaming']}'`);
    }
}

export function ExecuteScriptResponseToJSON(value?: ExecuteScriptResponse | null): any {
    if (value == null) {
        return value;
    }
    switch (value['streaming']) {
        case 'false':
            return ExecuteScriptNonStreamingResponseToJSON(value);
        case 'true':
            return ExecuteScriptStreamingResponseToJSON(value);
        default:
            throw new Error(`No variant of ExecuteScriptResponse exists with 'streaming=${value['streaming']}'`);
    }

}

